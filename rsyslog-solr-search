#!/usr/bin/env ruby

require 'net/http'
require 'uri'
require "rexml/document"

class Doc
	attr_reader :attributes

	def initialize(element)
		@attributes = {}
		@element = element
		element.elements.each("*") do |e|
			@attributes[e.attributes["name"]] = e.text
		end
	end

	def [](key)
		attributes[key.to_s]
	end
end

solr_url = ENV["URL"] || "http://localhost:8080/solr/select"
SOLR_URL = URI.parse(solr_url)
QUERY = ENV["QUERY"] || ARGV.join(" ")
LIMIT = (ENV["LIMIT"] || 15).to_i
PAGE = (ENV["PAGE"] || 1).to_i
OFFSET = (PAGE-1) * LIMIT

lines = []
data = nil
req = Net::HTTP::Get.new(SOLR_URL.path)
req.set_form_data({ :q => QUERY, :start => OFFSET, :rows => LIMIT, :sort => "score desc, timestamp desc" })
req = Net::HTTP::Get.new(SOLR_URL.path + '?' + req.body)
res = Net::HTTP.new(SOLR_URL.host, SOLR_URL.port).start { |http| http.request(req) }

root = REXML::Document.new res.body

result = root.elements["response/result[1]"] 

if result.nil?
	STDERR.puts "ERROR: #{res.body}"
	exit 1
end

STDERR.puts "page #{PAGE} of #{ result.attributes["numFound"] } hits for search \"#{QUERY}\""

result.elements.each("doc") do |e|
	doc = Doc.new(e)
	puts "#{doc[:generated]} #{doc[:hostname]} #{doc[:program]} #{doc[:msg]}"
end
